// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationAbad.Data;

#nullable disable

namespace WebApplicationAbad.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240908125451_addNulltoStudent")]
    partial class addNulltoStudent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Authorjob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contetnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IamgeArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IamgeAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReadTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesTypeCode");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ArticleViewCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ArticleViewCounts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.AuthorizeOrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("AutoCaptured")
                        .HasColumnType("bit");

                    b.Property<string>("CaptureId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("paymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuthorizeOrderModels");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Datecreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dateupdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stutes")
                        .HasColumnType("int");

                    b.Property<string>("TypeResqust")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailsAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileOutline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilesData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromalutetestAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromalutetestEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalsAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalsEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SammaryEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillsAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillsEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TestVaild")
                        .HasColumnType("bit");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesTypeId");

                    b.ToTable("CoursesData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesIsonline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsHide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoursesIsonlines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "حضوري",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9048),
                            EnglishName = "offline",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9049),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 2,
                            ArabicName = "أونلاين",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9050),
                            EnglishName = "online",
                            IsDelete = false,
                            IsHide = false,
                            UserCode = "111"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesReserved", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<int?>("BalanceDue")
                        .HasColumnType("int");

                    b.Property<int?>("ContractDatumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Paidup")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PreDiscount")
                        .HasColumnType("int");

                    b.Property<bool?>("StutusPaidup")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("StutusReserved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TokenNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypePaidId")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId", "CoursesSchedulessId");

                    b.HasIndex("ContractDatumId");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("TypePaidId");

                    b.ToTable("CoursesReserveds");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDay")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesDataId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesIsonlineId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("CoursesTypeCode1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFares")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHadaf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRamdan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkWhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfHourse")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("TimeCoures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detailsTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CoursesDataId");

                    b.HasIndex("CoursesIsonlineId");

                    b.HasIndex("CoursesStatusId");

                    b.HasIndex("CoursesTypeCode");

                    b.HasIndex("CoursesTypeCode1");

                    b.HasIndex("RoomId");

                    b.HasIndex("TrainerId");

                    b.ToTable("CoursesScheduless");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoursesStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "مفتوحه",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9025),
                            EnglishName = "opened",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9025),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 2,
                            ArabicName = "مغلقه",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9027),
                            EnglishName = "clossed",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9027),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 3,
                            ArabicName = "منتهيه",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9029),
                            EnglishName = "ended",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9029),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 4,
                            ArabicName = "ملغاه",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9031),
                            EnglishName = "cancelled",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9031),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("filt")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("CoursesTypes");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            ArabicName = "أمن المعلومات",
                            CreatedDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8922),
                            EnglishName = "Information Security",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8933),
                            TokenNumber = "7258a697-b087-4262-9680-aae005c4e8ab",
                            filt = 0
                        },
                        new
                        {
                            Code = 2,
                            ArabicName = "إدارة أعمال",
                            CreatedDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8940),
                            EnglishName = "Business Management",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8941),
                            TokenNumber = "48cde7dc-bc27-4f14-9cdc-716b640a8175",
                            filt = 0
                        },
                        new
                        {
                            Code = 3,
                            ArabicName = "برمجـــــــة",
                            CreatedDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8943),
                            EnglishName = "Programming",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8943),
                            TokenNumber = "7389e505-725c-4957-8cee-aa8cf46d13c4",
                            filt = 0
                        },
                        new
                        {
                            Code = 4,
                            ArabicName = "شبكـــــات",
                            CreatedDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8946),
                            EnglishName = "Networking",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8946),
                            TokenNumber = "46d6b36a-0a9e-41d6-ba4c-0c52fb865738",
                            filt = 0
                        },
                        new
                        {
                            Code = 5,
                            ArabicName = "إدارة خوادم وسـيرفرات",
                            CreatedDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8948),
                            EnglishName = "Server Management",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8948),
                            TokenNumber = "a9621042-3323-4ac5-964e-b8cb804ef456",
                            filt = 0
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CuntaryCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaCun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotationCun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CuntaryCodes");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.DiscountCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("NumberOfCourse")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserUpdate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiscountCodes");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.MessageReapet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MessageReapets");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.MoveStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTraform")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudntId")
                        .HasColumnType("int");

                    b.Property<int>("ToCourses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudntId");

                    b.ToTable("MoveStudent");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.PayTabsCallbackModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcquirerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AcquirerRRN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CretedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateAfterPay")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("PayTabsCallbackModel");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.RequiredCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesDataId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("CoursesTypeCode1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNw")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAribic")
                        .HasColumnType("bit");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesDataId");

                    b.HasIndex("CoursesTypeCode");

                    b.HasIndex("CoursesTypeCode1");

                    b.ToTable("RequiredCourse");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SelectData", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MessageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VlaueData")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SelectDatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MessageData = "1",
                            VlaueData = 1
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionsWeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionsWeekId");

                    b.ToTable("SessionsDays");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReplcesing")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeatingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeatingUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionsDayId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("SessionsDayId");

                    b.ToTable("SessionsRecords");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionsWeeks");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TabbyPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("TokenPayment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("amountRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("amountResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("checkout_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("paymentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("TabbyPayments");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TabbyPaymentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostWithTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DISCOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TabbyPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("TabbyPaymentId");

                    b.ToTable("TabbyPaymentCourses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TamaraPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmountwithTaxAferDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("checkout_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("checkout_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("discountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.Property<string>("order_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudentId");

                    b.ToTable("TamaraPayments");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TamaraPaymentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostWithTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DISCOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TamaraPaymentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("TamaraPaymentId");

                    b.ToTable("TamaraPaymentCourses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TypePaid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePaidData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "كاش",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9005),
                            EnglishName = "Cash",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(9002),
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 2,
                            ArabicName = "شبكه",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9007),
                            EnglishName = "network",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(9006),
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 3,
                            ArabicName = "تمارا",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9009),
                            EnglishName = "Tamara",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(9008),
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 4,
                            ArabicName = "تابي",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9010),
                            EnglishName = "tabby",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(9009),
                            UserCode = "111"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewStudnt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ViewsNowId")
                        .HasColumnType("int");

                    b.Property<bool>("isSelected")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudentId");

                    b.HasIndex("ViewsNowId");

                    b.ToTable("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewsNow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOpen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descraption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Head")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfCourses")
                        .HasColumnType("int");

                    b.Property<int>("PreDiscount")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViewsNows");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.courseBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseBaskets");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.paytabsPaymentCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostWithTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DISCOUNT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PayTabsCallbackModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("PayTabsCallbackModelId");

                    b.ToTable("PaytabsPaymentCourses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.EmployeePremotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<bool>("Article")
                        .HasColumnType("bit");

                    b.Property<bool>("ButtonInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("Company")
                        .HasColumnType("bit");

                    b.Property<bool>("CompanyRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("Complaints")
                        .HasColumnType("bit");

                    b.Property<bool>("Contract")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesData")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesScheduless")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesStutes")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesType")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("EmployeePage")
                        .HasColumnType("bit");

                    b.Property<bool>("HomePage")
                        .HasColumnType("bit");

                    b.Property<bool>("Matdetory")
                        .HasColumnType("bit");

                    b.Property<bool>("MessageReapet")
                        .HasColumnType("bit");

                    b.Property<bool>("RequiredCourse")
                        .HasColumnType("bit");

                    b.Property<bool>("Room")
                        .HasColumnType("bit");

                    b.Property<bool>("Studnt")
                        .HasColumnType("bit");

                    b.Property<bool>("TypePaid")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewsNow")
                        .HasColumnType("bit");

                    b.Property<bool>("Zoom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePremotion");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.HomeScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsButton")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowDes")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowTitel")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeScreens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "معهد شبكة آباد للتدريب من المعاهد الرائدة في تقديم الدورات التطويرية المتخصصة في تقنية المعلومات.",
                            Image = "banner.webp",
                            IsButton = true,
                            IsShowDes = true,
                            IsShowTitel = true,
                            State = true,
                            Title = "مرحبا بكم في آباد للتدريب"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Countries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailZoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdNumber")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordZoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainerData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CampsCourses.Models.CampsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedCode")
                        .HasColumnType("datetime2");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPayment")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeCourse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CampsModels");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CampsCourses.Models.VisitorCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VisitorCounts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompaniesData", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsiblePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFiled")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("CompaniesData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompanyRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoursesTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoursesTypesCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OurEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerivesModelId")
                        .HasColumnType("int");

                    b.Property<string>("Telphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesTypesCode");

                    b.HasIndex("SerivesModelId");

                    b.ToTable("CompanyRequests");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<int>("CompaniesDataId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ContractPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContractPrise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContractRest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ContractStatusCode")
                        .HasColumnType("int");

                    b.Property<int?>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeletae")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<int>("StudentCount")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tiltle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesDataId");

                    b.HasIndex("ContractStatusCode");

                    b.HasIndex("CoursesTypeCode");

                    b.ToTable("ContractData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractStatus", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateUserCode")
                        .HasColumnType("int");

                    b.Property<int>("UserCode")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("ContractStatuses");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            ArabicName = "مفعل",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9082),
                            EnglishName = "Active",
                            IsDelete = false,
                            UserCode = 111
                        },
                        new
                        {
                            Code = 2,
                            ArabicName = "غير مفعل",
                            CreatedDate = new DateTime(2024, 9, 8, 12, 54, 50, 726, DateTimeKind.Utc).AddTicks(9085),
                            EnglishName = "Not Active",
                            IsDelete = false,
                            UserCode = 111
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.Partners", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.SerivesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SerivesModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "عرض سعر"
                        },
                        new
                        {
                            Id = 2,
                            Name = "طلب عقد"
                        },
                        new
                        {
                            Id = 4,
                            Name = "اعاده الاتصال"
                        },
                        new
                        {
                            Id = 5,
                            Name = "طلب معلومات اضافية'"
                        },
                        new
                        {
                            Id = 6,
                            Name = "مناقصة"
                        },
                        new
                        {
                            Id = 7,
                            Name = "طلب زيارة"
                        },
                        new
                        {
                            Id = 8,
                            Name = "اخري"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacabookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateUserCode")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCode")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "الرياض",
                            CreatedDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8979),
                            EnglishName = "Riyadh",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 9, 8, 15, 54, 50, 726, DateTimeKind.Local).AddTicks(8980),
                            LastUpdateUserCode = 1,
                            UserCode = 1
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Studentjob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("evaluation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.PrivacyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IntellectualPropertyPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainServicesAgreement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivacyPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PromotionsPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermsofService")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrivacyModels");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.SettingsHome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedinURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SnapchatURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitlePlane")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WahtsAppNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoMe1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoMe2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoMe3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoMe4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YoutubeURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lVideoURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SettingsHomes");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Article", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany("Article")
                        .HasForeignKey("CoursesTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesType");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany("CoursesDatas")
                        .HasForeignKey("CoursesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesType");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesReserved", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", "ContractDatum")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("ContractDatumId");

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Student")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.TypePaid", "TypePaid")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("TypePaidId");

                    b.Navigation("ContractDatum");

                    b.Navigation("CoursesScheduless");

                    b.Navigation("Student");

                    b.Navigation("TypePaid");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.Setting.Data.Branch", "Branch")
                        .WithMany("CoursesSchedulesss")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", "CoursesData")
                        .WithMany("CoursesSchedulesss")
                        .HasForeignKey("CoursesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesIsonline", "CoursesIsonline")
                        .WithMany("CoursesSchedulesses")
                        .HasForeignKey("CoursesIsonlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesStatus", "CoursesStatus")
                        .WithMany("CoursesSchedulesss")
                        .HasForeignKey("CoursesStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany()
                        .HasForeignKey("CoursesTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", null)
                        .WithMany("CoursesSchedulesses")
                        .HasForeignKey("CoursesTypeCode1");

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.Room", "Room")
                        .WithMany("CoursesSchedulesses")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Trainer", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("CoursesData");

                    b.Navigation("CoursesIsonline");

                    b.Navigation("CoursesStatus");

                    b.Navigation("CoursesType");

                    b.Navigation("Room");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.MoveStudent", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany()
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Student")
                        .WithMany("MoveStudents")
                        .HasForeignKey("StudntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.PayTabsCallbackModel", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Students")
                        .WithMany("PayTabsCallbackModels")
                        .HasForeignKey("StudentId");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.RequiredCourse", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", "CoursesData")
                        .WithMany("RequiredCourse")
                        .HasForeignKey("CoursesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany()
                        .HasForeignKey("CoursesTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", null)
                        .WithMany("RequiredCourse")
                        .HasForeignKey("CoursesTypeCode1");

                    b.Navigation("CoursesData");

                    b.Navigation("CoursesType");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsWeek", "SessionsWeek")
                        .WithMany("sessionsDays")
                        .HasForeignKey("SessionsWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionsWeek");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsRecord", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("SessionsRecords")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", "sessionsDay")
                        .WithMany("SessionsRecords")
                        .HasForeignKey("SessionsDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("sessionsDay");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TabbyPayment", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Students")
                        .WithMany("TabbyPayments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TabbyPaymentCourse", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("TabbyPaymentsCourses")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.TabbyPayment", "TabbyPayment")
                        .WithMany("TabbyPaymentCourses")
                        .HasForeignKey("TabbyPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("TabbyPayment");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TamaraPayment", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", null)
                        .WithMany("TamaraPayments")
                        .HasForeignKey("CoursesSchedulessId");

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Students")
                        .WithMany("TamaraPayments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TamaraPaymentCourse", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("TamaraPaymentCourses")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.TamaraPayment", "TamaraPayment")
                        .WithMany("TamaraPaymentCourses")
                        .HasForeignKey("TamaraPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("TamaraPayment");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewStudnt", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("ViewStudnts")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "student")
                        .WithMany("ViewStudnts")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewsNow", "ViewsNow")
                        .WithMany("ViewStudnts")
                        .HasForeignKey("ViewsNowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("ViewsNow");

                    b.Navigation("student");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.courseBasket", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("CourseBaskets")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Students")
                        .WithMany("CourseBaskets")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.paytabsPaymentCourse", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("PaytabsPaymentCourses")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.PayTabsCallbackModel", "PayTabsCallbackModel")
                        .WithMany("PaytabsPaymentCourses")
                        .HasForeignKey("PayTabsCallbackModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("PayTabsCallbackModel");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.EmployeePremotion", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Employee", "employee")
                        .WithMany("EmployeePremotion")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompanyRequest", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesTypes")
                        .WithMany("CompanyRequests")
                        .HasForeignKey("CoursesTypesCode");

                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.SerivesModel", "SerivesModels")
                        .WithMany("CompanyRequests")
                        .HasForeignKey("SerivesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesTypes");

                    b.Navigation("SerivesModels");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.CompaniesData", "CompaniesData")
                        .WithMany("ContractData")
                        .HasForeignKey("CompaniesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.ContractStatus", "ContractStatus")
                        .WithMany("ContractData")
                        .HasForeignKey("ContractStatusCode");

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", null)
                        .WithMany("ContractData")
                        .HasForeignKey("CoursesTypeCode");

                    b.Navigation("CompaniesData");

                    b.Navigation("ContractStatus");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", b =>
                {
                    b.Navigation("CoursesSchedulesss");

                    b.Navigation("RequiredCourse");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesIsonline", b =>
                {
                    b.Navigation("CoursesSchedulesses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", b =>
                {
                    b.Navigation("CourseBaskets");

                    b.Navigation("CoursesReserveds");

                    b.Navigation("PaytabsPaymentCourses");

                    b.Navigation("SessionsRecords");

                    b.Navigation("TabbyPaymentsCourses");

                    b.Navigation("TamaraPaymentCourses");

                    b.Navigation("TamaraPayments");

                    b.Navigation("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesStatus", b =>
                {
                    b.Navigation("CoursesSchedulesss");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", b =>
                {
                    b.Navigation("Article");

                    b.Navigation("CompanyRequests");

                    b.Navigation("ContractData");

                    b.Navigation("CoursesDatas");

                    b.Navigation("CoursesSchedulesses");

                    b.Navigation("RequiredCourse");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.PayTabsCallbackModel", b =>
                {
                    b.Navigation("PaytabsPaymentCourses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Room", b =>
                {
                    b.Navigation("CoursesSchedulesses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", b =>
                {
                    b.Navigation("SessionsRecords");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsWeek", b =>
                {
                    b.Navigation("sessionsDays");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TabbyPayment", b =>
                {
                    b.Navigation("TabbyPaymentCourses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TamaraPayment", b =>
                {
                    b.Navigation("TamaraPaymentCourses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TypePaid", b =>
                {
                    b.Navigation("CoursesReserveds");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewsNow", b =>
                {
                    b.Navigation("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Employee", b =>
                {
                    b.Navigation("EmployeePremotion");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Student", b =>
                {
                    b.Navigation("CourseBaskets");

                    b.Navigation("CoursesReserveds");

                    b.Navigation("MoveStudents");

                    b.Navigation("PayTabsCallbackModels");

                    b.Navigation("TabbyPayments");

                    b.Navigation("TamaraPayments");

                    b.Navigation("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompaniesData", b =>
                {
                    b.Navigation("ContractData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", b =>
                {
                    b.Navigation("CoursesReserveds");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractStatus", b =>
                {
                    b.Navigation("ContractData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.SerivesModel", b =>
                {
                    b.Navigation("CompanyRequests");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.Branch", b =>
                {
                    b.Navigation("CoursesSchedulesss");
                });
#pragma warning restore 612, 618
        }
    }
}
