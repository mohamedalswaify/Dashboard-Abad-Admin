// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplicationAbad.Data;

#nullable disable

namespace WebApplicationAbad.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240802012506_addservicesDataRelasion")]
    partial class addservicesDataRelasion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Authorjob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contetnt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IamgeArticle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IamgeAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReadTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesTypeCode");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Datecreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Dateupdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stutes")
                        .HasColumnType("int");

                    b.Property<string>("TypeResqust")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailsAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileOutline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilesData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromalutetestAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromalutetestEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalsAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoalsEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeaderEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceM")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SammaryEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillsAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkillsEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TestVaild")
                        .HasColumnType("bit");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesTypeId");

                    b.ToTable("CoursesData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesIsonline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsHide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoursesIsonlines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "حضوري",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 52, 18, 0, DateTimeKind.Unspecified),
                            EnglishName = "offline",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2023, 11, 28, 0, 20, 10, 0, DateTimeKind.Unspecified),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 2,
                            ArabicName = "أون لاين",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 52, 34, 0, DateTimeKind.Unspecified),
                            EnglishName = "online",
                            IsDelete = false,
                            IsHide = false,
                            UserCode = "111"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesReserved", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<int?>("BalanceDue")
                        .HasColumnType("int");

                    b.Property<int?>("ContractDatumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsCompany")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsView")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Paidup")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Payment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PreDiscount")
                        .HasColumnType("int");

                    b.Property<bool?>("StutusPaidup")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<bool>("StutusReserved")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TokenNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypePaidId")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId", "CoursesSchedulessId");

                    b.HasIndex("ContractDatumId");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("TypePaidId");

                    b.ToTable("CoursesReserveds");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseDay")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesDataId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesIsonlineId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesStatusId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("CoursesTypeCode1")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFares")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHadaf")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRamdan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkWhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfHourse")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("TimeCoures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detailsTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CoursesDataId");

                    b.HasIndex("CoursesIsonlineId");

                    b.HasIndex("CoursesStatusId");

                    b.HasIndex("CoursesTypeCode");

                    b.HasIndex("CoursesTypeCode1");

                    b.HasIndex("RoomId");

                    b.HasIndex("TrainerId");

                    b.ToTable("CoursesScheduless");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CoursesStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "مفتوحه",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 52, 52, 0, DateTimeKind.Unspecified),
                            EnglishName = "opened",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2023, 8, 27, 0, 54, 50, 0, DateTimeKind.Unspecified),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 2,
                            ArabicName = "مغلقه",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 53, 9, 0, DateTimeKind.Unspecified),
                            EnglishName = "clossed",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2023, 8, 27, 0, 55, 18, 0, DateTimeKind.Unspecified),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 3,
                            ArabicName = "منتهيه",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3302),
                            EnglishName = "ended",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3302),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 4,
                            ArabicName = "ملغاه",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3304),
                            EnglishName = "cancelled",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3305),
                            LastUpdateUserCode = "111",
                            UserCode = "111"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("filt")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("CoursesTypes");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            ArabicName = "أمن المعلومات",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3070),
                            EnglishName = "Information Security",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3082),
                            TokenNumber = "f97cebfd-d691-4ae3-9b38-684f381e7bea",
                            filt = 0
                        },
                        new
                        {
                            Code = 2,
                            ArabicName = "إدارة أعمال",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3090),
                            EnglishName = "Business Management",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3091),
                            TokenNumber = "9f05dc1f-a2f7-403d-b97d-e691c6d462f4",
                            filt = 0
                        },
                        new
                        {
                            Code = 3,
                            ArabicName = "برمجـــــــة",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3093),
                            EnglishName = "Programming",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3093),
                            TokenNumber = "2dbf2853-3d50-4254-8c79-3b34602c13f4",
                            filt = 0
                        },
                        new
                        {
                            Code = 4,
                            ArabicName = "شبكـــــات",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3096),
                            EnglishName = "Networking",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3096),
                            TokenNumber = "b2d674cc-602f-41e8-8864-85ad7a6cff40",
                            filt = 0
                        },
                        new
                        {
                            Code = 5,
                            ArabicName = "إدارة خوادم وسـيرفرات",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3098),
                            EnglishName = "Server Management",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3099),
                            TokenNumber = "1004f91d-d6ec-4686-9338-95a4b0a0300d",
                            filt = 0
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CuntaryCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaCun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotationCun")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CuntaryCodes");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.MoveStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTraform")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudntId")
                        .HasColumnType("int");

                    b.Property<int>("ToCourses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudntId");

                    b.ToTable("MoveStudent");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.PayTabsCallbackModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AcquirerMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AcquirerRRN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RespStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("coursesScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PayTabsCallbackModel");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.RequiredCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesDataId")
                        .HasColumnType("int");

                    b.Property<int>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<int?>("CoursesTypeCode1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNw")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAribic")
                        .HasColumnType("bit");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesDataId");

                    b.HasIndex("CoursesTypeCode");

                    b.HasIndex("CoursesTypeCode1");

                    b.ToTable("RequiredCourse");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNameAR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNameEN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SelectData", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MessageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VlaueData")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SelectDatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MessageData = "1",
                            VlaueData = 1
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfDay")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionsWeekId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SessionsWeekId");

                    b.ToTable("SessionsDays");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsReplcesing")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeatingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeatingUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionsDayId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("SessionsDayId");

                    b.ToTable("SessionsRecords");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SessionsWeeks");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TypePaid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePaidData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "كاش",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3163),
                            EnglishName = "Cash",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3159),
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 2,
                            ArabicName = "شبكه",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3165),
                            EnglishName = "network",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3164),
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 3,
                            ArabicName = "تمارا",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3167),
                            EnglishName = "Tamara",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3166),
                            UserCode = "111"
                        },
                        new
                        {
                            Id = 4,
                            ArabicName = "تابي",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3169),
                            EnglishName = "tabby",
                            IsDelete = false,
                            IsHide = false,
                            IsLocked = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3168),
                            UserCode = "111"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewStudnt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("ViewsNowId")
                        .HasColumnType("int");

                    b.Property<bool>("isSelected")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudentId");

                    b.HasIndex("ViewsNowId");

                    b.ToTable("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewsNow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateClosed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOpen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descraption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Head")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfCourses")
                        .HasColumnType("int");

                    b.Property<int>("PreDiscount")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ViewsNows");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.courseBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoursesSchedulessId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("TokenNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesSchedulessId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseBaskets");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.EmployeePremotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<bool>("Article")
                        .HasColumnType("bit");

                    b.Property<bool>("ButtonInvoice")
                        .HasColumnType("bit");

                    b.Property<bool>("Company")
                        .HasColumnType("bit");

                    b.Property<bool>("CompanyRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("Complaints")
                        .HasColumnType("bit");

                    b.Property<bool>("Contract")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesData")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesScheduless")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesStutes")
                        .HasColumnType("bit");

                    b.Property<bool>("CoursesType")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("EmployeePage")
                        .HasColumnType("bit");

                    b.Property<bool>("HomePage")
                        .HasColumnType("bit");

                    b.Property<bool>("Matdetory")
                        .HasColumnType("bit");

                    b.Property<bool>("MessageReapet")
                        .HasColumnType("bit");

                    b.Property<bool>("RequiredCourse")
                        .HasColumnType("bit");

                    b.Property<bool>("Room")
                        .HasColumnType("bit");

                    b.Property<bool>("Studnt")
                        .HasColumnType("bit");

                    b.Property<bool>("TypePaid")
                        .HasColumnType("bit");

                    b.Property<bool>("ViewsNow")
                        .HasColumnType("bit");

                    b.Property<bool>("Zoom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePremotion");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.HomeScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsButton")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowDes")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShowTitel")
                        .HasColumnType("bit");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HomeScreens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "معهد شبكة آباد للتدريب من المعاهد الرائدة في تقديم الدورات التطويرية المتخصصة في تقنية المعلومات.",
                            Image = "banner.webp",
                            IsButton = true,
                            IsShowDes = true,
                            IsShowTitel = true,
                            State = true,
                            Title = "مرحبا بكم في آباد للتدريب"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Countries")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EducationsType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Idnumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailZoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdNumber")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordZoom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrainerData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompaniesData", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsibleNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsiblePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkFiled")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("CompaniesData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompanyRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoursesTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CoursesTypesCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OurEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SerivesModelId")
                        .HasColumnType("int");

                    b.Property<string>("Telphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CoursesTypesCode");

                    b.HasIndex("SerivesModelId");

                    b.ToTable("CompanyRequests");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BranchCode")
                        .HasColumnType("int");

                    b.Property<int>("CompaniesDataId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ContractPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContractPrise")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ContractRest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ContractStatusCode")
                        .HasColumnType("int");

                    b.Property<int?>("CoursesTypeCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeletae")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateUserCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nots")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.Property<int>("StudentCount")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tiltle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompaniesDataId");

                    b.HasIndex("ContractStatusCode");

                    b.HasIndex("CoursesTypeCode");

                    b.ToTable("ContractData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractStatus", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Code"));

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateUserCode")
                        .HasColumnType("int");

                    b.Property<int>("UserCode")
                        .HasColumnType("int");

                    b.HasKey("Code");

                    b.ToTable("ContractStatuses");

                    b.HasData(
                        new
                        {
                            Code = 1,
                            ArabicName = "مفعل",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 52, 18, 0, DateTimeKind.Unspecified),
                            EnglishName = "Active",
                            IsDelete = false,
                            UserCode = 111
                        },
                        new
                        {
                            Code = 2,
                            ArabicName = "غير مفعل",
                            CreatedDate = new DateTime(2023, 8, 27, 0, 52, 34, 0, DateTimeKind.Unspecified),
                            EnglishName = "Not Active",
                            IsDelete = false,
                            UserCode = 111
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.SerivesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SerivesModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "عرض سعر"
                        },
                        new
                        {
                            Id = 2,
                            Name = "طلب عقد"
                        },
                        new
                        {
                            Id = 4,
                            Name = "اعاده الاتصال"
                        },
                        new
                        {
                            Id = 5,
                            Name = "طلب معلومات اضافية'"
                        },
                        new
                        {
                            Id = 6,
                            Name = "مناقصة"
                        },
                        new
                        {
                            Id = 7,
                            Name = "طلب زيارة"
                        },
                        new
                        {
                            Id = 8,
                            Name = "اخري"
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacabookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastUpdateUserCode")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCode")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArabicName = "الرياض",
                            CreatedDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3137),
                            EnglishName = "Riyadh",
                            IsDelete = false,
                            IsHide = false,
                            LastUpdateDate = new DateTime(2024, 8, 2, 4, 25, 4, 811, DateTimeKind.Local).AddTicks(3138),
                            LastUpdateUserCode = 1,
                            UserCode = 1
                        });
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Article", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany("Article")
                        .HasForeignKey("CoursesTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesType");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany("CoursesDatas")
                        .HasForeignKey("CoursesTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesType");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesReserved", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", "ContractDatum")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("ContractDatumId");

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Student")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.TypePaid", "TypePaid")
                        .WithMany("CoursesReserveds")
                        .HasForeignKey("TypePaidId");

                    b.Navigation("ContractDatum");

                    b.Navigation("CoursesScheduless");

                    b.Navigation("Student");

                    b.Navigation("TypePaid");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.Setting.Data.Branch", "Branch")
                        .WithMany("CoursesSchedulesss")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", "CoursesData")
                        .WithMany("CoursesSchedulesss")
                        .HasForeignKey("CoursesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesIsonline", "CoursesIsonline")
                        .WithMany("CoursesSchedulesses")
                        .HasForeignKey("CoursesIsonlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesStatus", "CoursesStatus")
                        .WithMany("CoursesSchedulesss")
                        .HasForeignKey("CoursesStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany()
                        .HasForeignKey("CoursesTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", null)
                        .WithMany("CoursesSchedulesses")
                        .HasForeignKey("CoursesTypeCode1");

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.Room", "Room")
                        .WithMany("CoursesSchedulesses")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Trainer", "Trainer")
                        .WithMany()
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("CoursesData");

                    b.Navigation("CoursesIsonline");

                    b.Navigation("CoursesStatus");

                    b.Navigation("CoursesType");

                    b.Navigation("Room");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.MoveStudent", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany()
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Student")
                        .WithMany("MoveStudents")
                        .HasForeignKey("StudntId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.RequiredCourse", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", "CoursesData")
                        .WithMany("RequiredCourse")
                        .HasForeignKey("CoursesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesType")
                        .WithMany()
                        .HasForeignKey("CoursesTypeCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", null)
                        .WithMany("RequiredCourse")
                        .HasForeignKey("CoursesTypeCode1");

                    b.Navigation("CoursesData");

                    b.Navigation("CoursesType");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsWeek", "SessionsWeek")
                        .WithMany("sessionsDays")
                        .HasForeignKey("SessionsWeekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SessionsWeek");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsRecord", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("SessionsRecords")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", "sessionsDay")
                        .WithMany("SessionsRecords")
                        .HasForeignKey("SessionsDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("sessionsDay");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewStudnt", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("ViewStudnts")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "student")
                        .WithMany("ViewStudnts")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewsNow", "ViewsNow")
                        .WithMany("ViewStudnts")
                        .HasForeignKey("ViewsNowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("ViewsNow");

                    b.Navigation("student");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.courseBasket", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", "CoursesScheduless")
                        .WithMany("CourseBaskets")
                        .HasForeignKey("CoursesSchedulessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Student", "Students")
                        .WithMany("CourseBaskets")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesScheduless");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.EmployeePremotion", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminManageData.Data.Employee", "employee")
                        .WithMany("EmployeePremotion")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompanyRequest", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", "CoursesTypes")
                        .WithMany("CompanyRequests")
                        .HasForeignKey("CoursesTypesCode");

                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.SerivesModel", "SerivesModels")
                        .WithMany("CompanyRequests")
                        .HasForeignKey("SerivesModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoursesTypes");

                    b.Navigation("SerivesModels");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", b =>
                {
                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.CompaniesData", "CompaniesData")
                        .WithMany("ContractData")
                        .HasForeignKey("CompaniesDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplicationAbad.Areas.CompanyData.Models.ContractStatus", "ContractStatus")
                        .WithMany("ContractData")
                        .HasForeignKey("ContractStatusCode");

                    b.HasOne("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", null)
                        .WithMany("ContractData")
                        .HasForeignKey("CoursesTypeCode");

                    b.Navigation("CompaniesData");

                    b.Navigation("ContractStatus");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesData", b =>
                {
                    b.Navigation("CoursesSchedulesss");

                    b.Navigation("RequiredCourse");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesIsonline", b =>
                {
                    b.Navigation("CoursesSchedulesses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesScheduless", b =>
                {
                    b.Navigation("CourseBaskets");

                    b.Navigation("CoursesReserveds");

                    b.Navigation("SessionsRecords");

                    b.Navigation("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesStatus", b =>
                {
                    b.Navigation("CoursesSchedulesss");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.CoursesType", b =>
                {
                    b.Navigation("Article");

                    b.Navigation("CompanyRequests");

                    b.Navigation("ContractData");

                    b.Navigation("CoursesDatas");

                    b.Navigation("CoursesSchedulesses");

                    b.Navigation("RequiredCourse");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.Room", b =>
                {
                    b.Navigation("CoursesSchedulesses");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsDay", b =>
                {
                    b.Navigation("SessionsRecords");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.SessionsWeek", b =>
                {
                    b.Navigation("sessionsDays");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.TypePaid", b =>
                {
                    b.Navigation("CoursesReserveds");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminCoursesData.Models.ViewsNow", b =>
                {
                    b.Navigation("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Employee", b =>
                {
                    b.Navigation("EmployeePremotion");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.AdminManageData.Data.Student", b =>
                {
                    b.Navigation("CourseBaskets");

                    b.Navigation("CoursesReserveds");

                    b.Navigation("MoveStudents");

                    b.Navigation("ViewStudnts");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.CompaniesData", b =>
                {
                    b.Navigation("ContractData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractDatum", b =>
                {
                    b.Navigation("CoursesReserveds");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.ContractStatus", b =>
                {
                    b.Navigation("ContractData");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.CompanyData.Models.SerivesModel", b =>
                {
                    b.Navigation("CompanyRequests");
                });

            modelBuilder.Entity("WebApplicationAbad.Areas.Setting.Data.Branch", b =>
                {
                    b.Navigation("CoursesSchedulesss");
                });
#pragma warning restore 612, 618
        }
    }
}
