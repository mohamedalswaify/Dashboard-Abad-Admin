@using WebApplicationAbad.Areas.AdminCoursesData.Models;

@using WebApplicationAbad.Areas.AdminManageData.Data
@using WebApplicationAbad.Data;
@inject ApplicationDbContext context;
@model CoursesScheduless;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Coursesm Scheduless";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var model1 = ViewBag.StudentReserveds as IEnumerable<CoursesReserved>;
    var model2 = ViewBag.ModelDataSchedulss as CoursesScheduless;
    int Count = 0;

    //var valueData = context.SelectDatas.Find(1);
    //valueData.VlaueData = model2.Id;
    //context.SelectDatas.Update(valueData);
    //context.SaveChanges();

    var result = context.coursesSchedulesses
    .Where(b=>b.IsHide == false && !b.IsDelete &&b.CoursesStatusId==1)
    .Select(cs => new SelectListItem
            {
                Value = cs.Id.ToString(),
                Text = $"{cs.Id}  -{cs.StartDate.Value.ToString("dd-MM-yyyy")} - {cs.StartTime} - {cs.CoursesData.HeaderAr} - {cs.Trainer.NameAr}"
            })
    .ToList();
    ViewBag.ListItmeData = new SelectList(result, "Value", "Text");

    var Company = context.CompaniesData.ToList();
    SelectList listItems = new SelectList(Company, "Code", "EnglishName");
    ViewBag.ListItmeDatas = listItems;

    var Listal =new CoursesReserved();
    int ResId = 0;



    string? Cook = Context.Request.Cookies["EmployeeId"]?.ToString();
    Employee employee;
    EmployeePremotion prema;
    if (Cook != null)
    {
        employee = context.Employees.FirstOrDefault(b => b.Token == Cook);
        prema = context.EmployeePremotion.FirstOrDefault(b => b.EmployeeId == employee.Id);
    }
    else
    {
        employee = context.Employees.FirstOrDefault();
        prema = context.EmployeePremotion.FirstOrDefault();

    }




}
<link href="~/Admin/css/StyleSheet.css" rel="stylesheet">

<style>
    .popup-container, .popup-container2 {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .popup-content, .popup-content2 {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        width:50%;
        direction:ltr;
    }

    #courseSelect{
        direction: ltr;
    }

    .close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 20px;
        cursor: pointer;
    }

    label {
        display: block;
        margin-bottom: 10px;
    }

    .marg{
        margin-top: 70px;
        margin-bottom: 30px;
    }
    h4{
        ont-size: 22px;
        font-weight: bold;
        color: #677880;
    }

    .table-action a {
        color: #ffffff;
    }

    .tab-title {
        font-size: 10px !important;
    }

    .tab-title1 {
        font-size: 12px !important;
    }
    .mod{
        margin-top: 30px;
        margin-bottom: 30px;
    }

    .mod button{
            font-size: 16px;
            font-weight: bold;
        }

    .Roal{
        display:none;
        flex-wrap:wrap
    }
    .active{
        display:none;
    }

</style>
<div class="col-12 myrow">
    <div class="card">
        <div class="card-header">
        </div>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>اسم المدرب</th>
                        <th>اسم الدوره</th>
                        <th>التاريخ</th>
                        <th>الوقت</th>
                        <th>تاريخ البدايه</th>
                        <th>تاريخ النهايه</th>
                        <th>السعر</th>
                    </tr>
                </thead>
                <tbody>
                        <tr>
                    <td>@model2.Trainer.NameAr</td>
                            <td>
                        @model2.CoursesData.HeaderAr <br>
                        @if (model2.IsHide)
                                {
                                    <span class="tab-title badge bg-danger">Closed</span>
                                }
                            </td>
                    <td>@model2.TimeCoures</td>
                            <td>
                                <span class="tab-title1 badge bg-success">
                            @model2.StartTime
                                </span>
                                <br>
                                <span class="tab-title1 badge bg-danger">
                            @model2.EndTime
                                </span>
                            </td>
                    <td>@model2.StartDate?.ToString("dd-MM-yyyy")</td>
                    <td>@model2.EndDate?.ToString("dd-MM-yyyy")</td>
                    <td>@model2.Cost</td>

                        </tr>
                </tbody>


            
            </table>

           <div class="text-center marg">
            <h4>الطلاب المسجلين بالدوره</h4>
           </div>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>م</th>
                    <th>اسم الطالب</th>
                    <th>رقم الهويه</th>
                    <th>الجوال</th>
                    <th>البريد اللكتروني</th>
                    <th>نقل الطالب</th>
                    <th>حاله الدفع</th>
                    <th>نوع الطالب</th>
                    @if (prema.MessageReapet)
							{
                    <th>الفواتير</th>
                            

                    <th>تعديل بيانات الحجز</th>

                    <th>حذف من الدورة</th>
                            }
                </tr>
            </thead>
            <tbody>

                @foreach (var item in model1)
                {

                    <tr>
                        <th>@{Count++;}
                            @Count
                        </th>
                        <th>@item.Student.ArabicName</th>
                        <th>@item.Student.Idnumber</th>
                        <th>@item.Student.Phone</th>
                        <th>@item.Student.Email</th>
                        <td class="table-action">
                            <a class="btn btn-success openPopup" data-Id="@item.Id">نقل الطالب</a>
                        </td>
                        <td class="table-action">
                            @if(@item.StutusPaidup==true){
                              <span class="tab-title1 badge bg-success">تم الدفع</span>
                            }
                            else{
                              <span class="tab-title1 badge bg-danger">لم يتم الدفع</span>
                            }
                            
                        </td>
                        <td class="table-action">
                            @if (item.IsCompany==true){
                                <span class="tab-title1 badge bg-dark">شركات</span>
                            }
                            else
                            {
                                <span class="tab-title1 badge bg-warning">افراد</span>
                            }
                        </td>
                        @if (prema.MessageReapet)
                        {
                        <td class="table-action">
                            @if (item.IsCompany == true)
                            {
                                <span class="tab-title1 badge bg-primary">مدفوع من قبل الشركة</span>
                            }
                            else if (item.StutusPaidup ==false){
                                <a class="btn btn-info" style="width:100px" asp-controller="Invoice" asp-action="GetInvoice" asp-route-id="@item.Id" target="_blank">اصدار فاتوره</a>
                            }
                            else
                            {
                                <a class="btn btn-info" style="width:100px" asp-controller="Invoice" asp-action="GetInvoice" asp-route-id="@item.Id" target="_blank">عرض الفاتورة</a>

                            }
                        </td>
                        <td class="table-action">
                               <a asp-action="GetEditSchedulessCourses" asp-route-id="@item.Id" class="btn btn-dark">تعديل</a>
                        </td>
                        <td class="table-action">
                        @if (item.StutusPaidup == false)
                        {
                                <button class="btn btn-danger deleteStudnt" data-Id="@item.Id">حذف الطالب</button>
                        }

                        </td>
                       }
                    </tr>
                }
            </tbody>
        </table>

        <div id="popupContainer" class="popup-container">
            <div class="popup-content">
                <span class="close-btn" id="closePopup">&times;</span>
                <h2 class="text-center">نقل الطالب من الدورة</h2>
                <hr />
                <div class="d-flex justify-content-center">
                    <select id="courseSelect" class="form-select" asp-items="ViewBag.ListItmeData" style="width:70%">
                    </select>
                    <label for="courseSelect" style="font-size: 20px;font-weight: bold;margin-left:5px">:اختر الدورة</label>
                </div>
                <br />
                <div class="text-center">
                    @*<a asp class="btn btn-primary" asp-route-idResved="@item.Id" asp-route-NewSeccId="" asp-route-IdSecc="@model2.Id" asp-controller="CoursesScheduless" asp-action="Tarnsform" style="font-size: 20px; width: 30%;" id="moveStudent">نقل الطالب</a>*@
                    <button class="btn btn-primary" id="moveStudent">نقل الطالب</button>
                </div>
            </div>
        </div>


       


        <div class="text-center mod" >
            <button id="myBtn"  class="btn btn-primary">اضافه طالب الي الدوره</button>
        </div>
            <input type="hidden" name="CoursesId" value="@model2.Id" />
        <div id="myModal" class="modal">
            @await Html.PartialAsync("GetFormStudent.cshtml", Model)
        </div>
        <div>
           
        </div>


        
</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


<script>
    $(document).ready(function () {
        $('#Inputsearch').keypress(function (e) {
            if (e.which === 13) {
                var inputValue = $(this).val();

                $.ajax({
                    url: '/AdminCoursesData/CoursesScheduless/GetDateStudent',
                    type: 'GET',
                    data: { id: inputValue },
                    cache: false,
                    success: function (result) {
                        $('#myModal').html(result);
                    }
                });
            }
        });
    });
 </script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        $('#selectCompany').change(function () {
            var selectedValue = $(this).val();
            $.ajax({
                url: '/AdminCoursesData/CoursesScheduless/GetCompanyData',
                type: 'GET',
                data: { CopanyId: selectedValue },
                success: function (data) {
                    var coursesDataSelect = $('#selectContract');

                    coursesDataSelect.empty();
                    coursesDataSelect.append($('<option>', {
                        value: '',
                        text: 'اختر الدوره'
                    }));

                    $.each(data, function (index, item) {
                        coursesDataSelect.append($('<option>', {
                            value: item.value,
                            text: item.text
                        }));
                    });
                }
            });
        });
    });
</script>
<script>
        var modal = document.getElementById("myModal");

        var btn = document.getElementById("myBtn");

        var btn32 = document.getElementById("myBtn32");

    
        var span = document.getElementsByClassName("close")[0];


        btn.onclick = function () {
            modal.style.display = "block";
        }

        btn32.onclick=function(){
           modal.style.display="none";
        }

        span.onclick = function () {
            modal.style.display = "none";
        }

        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }


    function toggleSelect() {
        var selectElement = document.getElementById('selectCompany');
        var selectElement2 = document.getElementById('selectContract');
        var checkboxElement = document.getElementById('fomt');

        if (checkboxElement.checked) {
            selectElement.removeAttribute('disabled');
            selectElement.setAttribute('required', 'required');
            selectElement2.removeAttribute('disabled');
            selectElement2.setAttribute('required', 'required');
            document.getElementById('fomt').value = 'true';
            document.getElementById('CompanyID').style.display = 'flex';
        } else {
            selectElement.setAttribute('disabled', 'disabled');
            selectElement.removeAttribute('required');
            selectElement2.setAttribute('disabled', 'disabled');
            selectElement2.removeAttribute('required');
            document.getElementById('fomt').value = 'false';
            document.getElementById('CompanyID').style.display = 'none';
        }
    }
    </script>
<script>
    $(document).ready(function () {
        $('.deleteStudnt').each(function () {
            $(this).click(function (e) {
                var con = confirm("هل تريد بالفعل حذف الطالب")
                if (con == true) {
                    var RedvedId = $(this).attr("data-Id");
                    console.log(RedvedId);
                    $.ajax({
                        url: '/AdminCoursesData/CoursesScheduless/DeleteStudent',
                        type: 'GET',
                        data: { Id: RedvedId },
                        cache: false,
                        success: function (result) {
                            location.reload();
                        }
                    });
                } 
                
            });
        });

        $(document).on('click', function (e) {
            if (!$(e.target).closest('#more').length) {
                $('#more').removeClass('active');
            }
        });

        $('.TransStudnt').on('click', function (e) {
            e.stopPropagation(); 
            $('#more').toggleClass('active');
        });

        $('#more').on('click', function (e) {
            e.stopPropagation();
        });


    });
</script>
<script>
    $(document).ready(function () {
        $('.openPopup').each(function () {
            $(this).on('click', function () {
                console.log('نقل الطالب');
                var dataIdValue = $(this).data('id');
                $('#popupContainer').css('display', 'block');
                $('#moveStudent').attr('data-id', dataIdValue);
                                
            });
        });

      

        $('#closePopup').on('click', function () {
            $('#popupContainer').css('display', 'none');
        });

        $('.popupContent .moveStudent').on('click', function () {
            $('#popupContainer').css('display', 'none');
        });
    });



</script>
<script>
    $('#moveStudent').on('click', function (e) {

        var selectedValue = $('#courseSelect').val();
        var idSecc = '@model2.Id';
        var idResved = $(this).attr('data-id'); 

        console.log(selectedValue);
        console.log(idSecc);
        console.log(idResved);



        $.ajax({
            url: '/AdminCoursesData/CoursesScheduless/Tarnsform',
            method: 'GET',
            data: {
                IdSecc: idSecc,
                NewSeccId: selectedValue,
                idResved: idResved
            },
            cache: false,
            success: function (data) {
                var IdSec = '@model2.Id';
                console.log(IdSec);
                var newUrl = `/AdminCoursesData/CoursesScheduless/GetDaitlsCoursesSchduless?IdCourses=${IdSec}`;
                window.location.href = newUrl;
            },
            error: function (error) {
            }
        });
    });

</script>
<script>
    document.addEventListener("change", function () {
        $('#selectCompany2').change(function () {
            var selectedValue = $(this).val();
            $.ajax({
                url: '/AdminCoursesData/CoursesScheduless/GetCompanyData',
                type: 'GET',
                data: { CopanyId: selectedValue },
                success: function (data) {
                    var coursesDataSelect = $('#selectContract2');

                    coursesDataSelect.empty();
                    coursesDataSelect.append($('<option>', {
                        value: '',
                        text: 'اختر العقد'
                    }));

                    $.each(data, function (index, item) {
                        coursesDataSelect.append($('<option>', {
                            value: item.value,
                            text: item.text
                        }));
                    });
                }
            });
        });
    });

    function FunPro() {
        var checkboxes = document.querySelectorAll('[name="IsCompanys"]');
        var roals = document.querySelectorAll('.Roal');

        for (var i = 0; i < checkboxes.length; i++) {
            if (checkboxes[i].checked) {
                roals[i].style.display = 'block'; 
            } else {
                roals[i].style.display = 'none'; 
            }
        }
    }

    function checkOther(checkbox, id) {
        if (checkbox.checked) {
            var otherCheckbox = document.getElementById(id);
            otherCheckbox.checked = false;
        }
    }

    $(document).ready(function () {
        $(".btn-dark").click(function () {
            var popup = $(this).closest('.table-action').find('.popup-container2');
            $('.popup-container2').not(popup).hide();
            popup.toggle();
        });

        $(".close-btn").click(function () {
            var popup = $(this).closest('.popup-container2');
            popup.hide();
            if (popup.find('.popup-content2').is(':empty')) {
                popup.hide();
            }
        });
    });
</script>
<script>
    function checkOther(currentCheckbox, otherCheckboxId) {
        if (currentCheckbox.checked) {
            document.getElementById(otherCheckboxId).checked = false; 
        }
    }
</script>
<script>
    $(document).ready(function () {
        $('#updateResved').click(function (e) {
            var IsCompany = $('#fomt2').is(':checked');
            var Contract = $('#selectContract2').val();
            var resId = $('#resId').val();
            $.ajax({
                url: '/AdminCoursesData/CoursesScheduless/UpdateStduentResved',
                type: 'GET',
                data: { IsCompany: IsCompany, Contract: Contract, ResveId: resId },
                success: function (result) {
                    location.reload();
                }
            });
        });
    });
</script>
<script>
    function funcel(itemId) {
        var popupContainer = document.getElementById("popupContainer");
        popupContainer.style.display = "block";
        var resId = itemId;
        console.log(resId);

        // يمكنك استخدام AJAX أو إرسال resId بطريقة أخرى إلى الجانب الخادم لاستعادة البيانات المطلوبة.
    }
</script>
